// Qu·∫£n l√Ω tr·∫°ng th√°i t·∫≠p trung
let gameState = {
    players: [],
    words: {
        "Hoa qu·∫£": [
            ["Cam", "Chanh"], ["T√°o", "L√™"], ["Xo√†i", "D·ª©a"], ["B∆∞·ªüi", "Qu√Ωt"], ["D∆∞a h·∫•u", "Thanh long"],
            ["M·∫≠n", "·ªîi"], ["Na", "M√≠t"], ["Kiwi", "Ch√¥m ch√¥m"], ["L·ª±u", "Nho"], ["D·ª´a", "C√≥c"]
        ],
        "ƒê·ªông v·∫≠t": [
            ["Ch√≥", "S√≥i"], ["M√®o", "H·ªï"], ["Ng·ª±a", "L·ª´a"], ["Tr√¢u", "B√≤"], ["Kh·ªâ", "V∆∞·ª£n"],
            ["S∆∞ t·ª≠", "B√°o"], ["G√†", "V·ªãt"], ["C·ª´u", "D√™"], ["C√° heo", "C√° voi"], ["R√πa", "Ba ba"]
        ],
        "ƒê·ªì v·∫≠t": [
            ["Gh·∫ø", "B√†n"], ["ƒêi·ªán tho·∫°i", "Laptop"], ["K√≠nh", "K√≠nh r√¢m"], ["C·ªëc", "Ly"], ["Dao", "K√©o"],
            ["Qu·∫°t", "ƒêi·ªÅu h√≤a"], ["Tivi", "M√°y t√≠nh"], ["Ch·∫£o", "N·ªìi"], ["G·ªëi", "ChƒÉn"], ["ƒê√®n", "ƒê√®n pin"]
        ],
        "M√†u s·∫Øc": [
            ["ƒê·ªè", "Cam"], ["Xanh d∆∞∆°ng", "Xanh bi·ªÉn"], ["Xanh l√°", "Xanh ng·ªçc"], ["T√≠m", "H·ªìng t√≠m"], ["ƒêen", "X√°m"],
            ["Tr·∫Øng", "Be"], ["V√†ng", "V√†ng ngh·ªá"], ["N√¢u", "N√¢u ƒë·∫•t"], ["H·ªìng", "H·ªìng pastel"], ["B·∫°c", "B·∫°ch kim"]
        ],
        "Qu·ªëc gia": [
            ["Vi·ªát Nam", "Th√°i Lan"], ["Trung Qu·ªëc", "Nh·∫≠t B·∫£n"], ["H√†n Qu·ªëc", "Tri·ªÅu Ti√™n"], ["M·ªπ", "Canada"], ["Anh", "Ph√°p"],
            ["ƒê·ª©c", "√ù"], ["Nga", "Ukraina"], ["Brazil", "Argentina"], ["√öc", "New Zealand"], ["Ai C·∫≠p", "Morocco"]
        ],
        "M√≥n ƒÉn": [
            ["Ph·ªü", "B√∫n b√≤"], ["C∆°m t·∫•m", "X√¥i m·∫∑n"], ["B√°nh m√¨", "B√°nh bao"], ["M√¨ t√¥m", "M√¨ tr·ª©ng"], ["L·∫©u Th√°i", "L·∫©u kim chi"],
            ["Nem r√°n", "Ch·∫£ gi√≤"], ["B√°nh cu·ªën", "B√°nh ∆∞·ªõt"], ["G·ªèi cu·ªën", "B√≤ b√≠a"], ["C√° kho", "Th·ªãt kho"], ["Ch√® ƒë·∫≠u", "Ch√® b∆∞·ªüi"]
        ],
        "ƒê·ªì u·ªëng": [
            ["C√† ph√™", "Tr√† ƒëen"], ["Tr√† s·ªØa", "S·ªØa t∆∞∆°i"], ["Coca", "Pepsi"], ["Bia", "R∆∞·ª£u vang"], ["Sinh t·ªë xo√†i", "Sinh t·ªë b∆°"],
            ["N∆∞·ªõc cam", "N∆∞·ªõc chanh"], ["H·ªìng tr√†", "Tr√† √¥ long"], ["Soda", "7Up"], ["S·ªØa chua u·ªëng", "Yakult"], ["Matcha", "Tr√† xanh"]
        ],
        "Ngh·ªÅ nghi·ªáp": [
            ["B√°c sƒ©", "Y t√°"], ["Gi√°o vi√™n", "Gia s∆∞"], ["C√¥ng an", "B·ªô ƒë·ªôi"], ["K·ªπ s∆∞", "L·∫≠p tr√¨nh vi√™n"], ["Ca sƒ©", "Di·ªÖn vi√™n"],
            ["H·ªça sƒ©", "ƒêi√™u kh·∫Øc gia"], ["Lu·∫≠t s∆∞", "Th·∫©m ph√°n"], ["ƒê·∫ßu b·∫øp", "Ph·ª• b·∫øp"], ["Phi c√¥ng", "Ti·∫øp vi√™n"], ["Nh√† b√°o", "Ph√≥ng vi√™n"]
        ],
        "Th·ªÉ thao": [
            ["B√≥ng ƒë√°", "Futsal"], ["B√≥ng r·ªï", "B√≥ng chuy·ªÅn"], ["C·∫ßu l√¥ng", "Tennis"], ["B∆°i l·ªôi", "L·∫∑n"], ["Ch·∫°y b·ªô", "ƒêi b·ªô"],
            ["ƒê·∫•m b·ªëc", "Muay Th√°i"], ["C·ªù vua", "C·ªù t∆∞·ªõng"], ["Tr∆∞·ª£t v√°n", "Tr∆∞·ª£t patin"], ["Golf", "Mini golf"], ["ƒêua xe", "MotoGP"]
        ],
        "Ph∆∞∆°ng ti·ªán": [
            ["Xe ƒë·∫°p", "Xe m√°y"], ["√î t√¥", "Xe t·∫£i"], ["T√†u h·ªèa", "T√†u ƒëi·ªán"], ["M√°y bay", "Tr·ª±c thƒÉng"], ["Thuy·ªÅn bu·ªìm", "Ca n√¥"],
            ["Xe bu√Ωt", "Xe kh√°ch"], ["Xe h∆°i", "Si√™u xe"], ["Xe ƒëi·ªán", "Xe hybrid"], ["Xe c√¥ng n√¥ng", "Xe k√©o"], ["Xe ng·ª±a", "Xe b√≤"]
        ],
        "√Çm nh·∫°c": [
            ["Piano", "Organ"], ["Guitar", "Ukulele"], ["Tr·ªëng", "Tr·ªëng cajon"], ["Violin", "Viola"], ["Rap", "Hiphop"],
            ["Nh·∫°c pop", "Nh·∫°c ballad"], ["Nh·∫°c rock", "Nh·∫°c metal"], ["Jazz", "Blues"], ["EDM", "DJ"], ["Bolero", "Tr·ªØ t√¨nh"]
        ],
        "ƒê·ªãa ƒëi·ªÉm": [
            ["Tr∆∞·ªùng h·ªçc", "Th∆∞ vi·ªán"], ["B·ªánh vi·ªán", "Ph√≤ng kh√°m"], ["Si√™u th·ªã", "Ch·ª£"], ["C√¥ng vi√™n", "S√¢n v·∫≠n ƒë·ªông"], ["Nh√† h√†ng", "Qu√°n c√† ph√™"],
            ["R·∫°p phim", "Nh√† h√°t"], ["Nh√† th·ªù", "Ch√πa"], ["Bi·ªÉn", "H·ªì"], ["N√∫i", "ƒê·ªìi"], ["Ga t√†u", "B·∫øn xe"]
        ],
        "Tr√≤ ch∆°i": [
            ["C·ªù vua", "C·ªù t∆∞·ªõng"], ["C·ªù caro", "C·ªù gomoku"], ["Poker", "B√†i t√¢y"], ["Uno", "Skipbo"], ["Ma s√≥i", "Among Us"],
            ["Sudoku", "Crossword"], ["Gh√©p h√¨nh", "X·∫øp g·ªó Jenga"], ["Li√™n Qu√¢n", "PUBG"], ["Minecraft", "Roblox"], ["Flappy Bird", "Candy Crush"]
        ],
        "C√¥ng ngh·ªá": [
            ["ƒêi·ªán tho·∫°i", "M√°y t√≠nh b·∫£ng"], ["M√°y t√≠nh", "Laptop"], ["Tai nghe", "Loa"], ["Chu·ªôt", "B√†n ph√≠m"], ["USB", "·ªî c·ª©ng"],
            ["M√°y ·∫£nh", "Camera"], ["Drone", "Robot"], ["M√°y in", "M√°y qu√©t"], ["M√°y chi·∫øu", "Tivi"], ["M√°y game", "Console"]
        ],
        "Th·ªùi ti·∫øt": [
            ["N·∫Øng", "N·∫Øng g·∫Øt"], ["M∆∞a", "M∆∞a ph√πn"], ["B√£o", "B√£o t·ªë"], ["Gi√≥", "Gi√≥ m√πa"], ["Tuy·∫øt", "B√£o tuy·∫øt"],
            ["S∆∞∆°ng m√π", "Tr·ªùi √¢m u"], ["S·∫•m s√©t", "M∆∞a gi√¥ng"], ["M√¢y", "Tr·ªùi quang"], ["Nhi·ªát ƒë·ªô cao", "N·∫Øng n√≥ng"], ["Nhi·ªát ƒë·ªô th·∫•p", "Tr·ªùi l·∫°nh"]
        ]
    },
    assignments: {},
    currentIndex: 0,
    suspectIndex: -1
};

// H√†m ti·ªán √≠ch ƒë·ªÉ chuy·ªÉn ƒë·ªïi m√†n h√¨nh
function switchScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

// X·ª≠ l√Ω t·∫°o √¥ nh·∫≠p t√™n
function createNameInputs() {
    const count = parseInt(document.getElementById("playerCount").value);
    const container = document.getElementById("nameInputs");
    container.innerHTML = "";
    if (isNaN(count) || count < 3 || count > 8) {
        document.getElementById("error-message").textContent = "S·ªë ng∆∞·ªùi ch∆°i ph·∫£i t·ª´ 3 ƒë·∫øn 8!";
        return;
    }
    document.getElementById("error-message").textContent = "";
    for (let i = 0; i < count; i++) {
        container.innerHTML += `<input type="text" class="playerNameInput" placeholder="T√™n ng∆∞·ªùi ch∆°i ${i + 1}">`;
    }
}

// B·∫Øt ƒë·∫ßu tr√≤ ch∆°i
function startGame() {
    const playerNameInputs = document.querySelectorAll("#nameInputs .playerNameInput");
    
    gameState.players = Array.from(playerNameInputs).map((input, index) => input.value.trim() || `Ng∆∞·ªùi ${index + 1}`);
    
    const checkedTopics = Array.from(document.querySelectorAll("#topics input:checked")).map(cb => cb.value);
    if (checkedTopics.length === 0) {
        document.getElementById("error-message").textContent = "Vui l√≤ng ch·ªçn √≠t nh·∫•t 1 ch·ªß ƒë·ªÅ!";
        return;
    }
    document.getElementById("error-message").textContent = "";

    const topic = checkedTopics[Math.floor(Math.random() * checkedTopics.length)];
    const wordPairs = gameState.words[topic];
    
    if (wordPairs.length === 0) {
        document.getElementById("error-message").textContent = "Ch·ªß ƒë·ªÅ ƒë√£ ch·ªçn kh√¥ng c√≥ t·ª´ kh√≥a n√†o!";
        return;
    }

    const randomPair = wordPairs[Math.floor(Math.random() * wordPairs.length)];
    const [differentWord, mainWord] = randomPair;

    gameState.suspectIndex = Math.floor(Math.random() * gameState.players.length);

    gameState.assignments = {};
    gameState.players.forEach((p, i) => {
        if (i === gameState.suspectIndex) {
            gameState.assignments[p] = { role: "B√¨nh Th∆∞·ªùng", content: `T·ª´ kh√≥a: ${differentWord}` };
        } else {
            gameState.assignments[p] = { role: "B√¨nh Th∆∞·ªùng", content: `T·ª´ kh√≥a: ${mainWord}` };
        }
    });

    gameState.currentIndex = 0;
    switchScreen('card-screen');
    showCurrentCard();
}

// Hi·ªÉn th·ªã th·∫ª b√†i cho ng∆∞·ªùi ch∆°i hi·ªán t·∫°i
function showCurrentCard() {
    const name = gameState.players[gameState.currentIndex];
    const assignment = gameState.assignments[name];

    document.getElementById("player-turn").innerText = `Ng∆∞·ªùi ch∆°i ${gameState.currentIndex + 1}: ${name}`;
    document.getElementById("card-front-name").innerText = name;
    document.getElementById("card-role").innerText = assignment.role;
    document.getElementById("card-content").innerText = assignment.content;

    document.querySelector("#card-container .card-inner").classList.remove('flipped');
    document.getElementById("nextBtn").classList.add('hidden');
}

// Chuy·ªÉn sang ng∆∞·ªùi ch∆°i ti·∫øp theo
function nextPlayer() {
    gameState.currentIndex++;
    if (gameState.currentIndex >= gameState.players.length) {
        switchScreen('vote-screen');
        showVoteScreen();
    } else {
        showCurrentCard();
    }
}

// Hi·ªÉn th·ªã m√†n h√¨nh b·ªè phi·∫øu
function showVoteScreen() {
    const playerOptionsContainer = document.getElementById("player-options");
    playerOptionsContainer.innerHTML = '';
    
    gameState.players.forEach(p => {
        const playerDiv = document.createElement("div");
        playerDiv.className = "player-option-item";
        playerDiv.innerHTML = `<input type="radio" name="suspect" value="${p}" id="radio-${p}">
                               <label for="radio-${p}">${p}</label>`;
        playerOptionsContainer.appendChild(playerDiv);
    });
}

// G·ª≠i phi·∫øu b·∫ßu
function submitVote() {
    const selectedPlayer = document.querySelector('input[name="suspect"]:checked');
    if (!selectedPlayer) {
        alert("Vui l√≤ng ch·ªçn m·ªôt ng∆∞·ªùi ƒë·ªÉ b·ªè phi·∫øu.");
        return;
    }
    checkResult(selectedPlayer.value);
}

// Ki·ªÉm tra k·∫øt qu·∫£
function checkResult(suspectVote) {
    const suspectName = gameState.players[gameState.suspectIndex];
    const resultMessage = document.getElementById("result-message");

    if (suspectVote === suspectName) {
        resultMessage.textContent = "Ng∆∞·ªùi c√≥ t·ª´ kh√≥a kh√°c ƒë√£ b·ªã t√¨m th·∫•y! üéâ";
        resultMessage.style.color = "var(--success-color)";
    } else {
        resultMessage.textContent = "Ng∆∞·ªùi c√≥ t·ª´ kh√≥a kh√°c v·∫´n c√≤n ·ªü ƒë√¢y... üïµÔ∏è";
        resultMessage.style.color = "var(--error-color)";
    }
    switchScreen('result-screen');
}

// Ch∆°i l·∫°i
function resetGame() {
    document.getElementById("nameInputs").innerHTML = '';
    document.getElementById("playerCount").value = '';
    document.querySelectorAll("#topics input:checked").forEach(cb => cb.checked = false);
    
    gameState.players = [];
    gameState.currentIndex = 0;
    gameState.assignments = {};
    gameState.suspectIndex = -1;
    
    switchScreen('setup-screen');
}

// H√†m kh·ªüi t·∫°o v√† g√°n s·ª± ki·ªán ban ƒë·∫ßu
function init() {
    document.getElementById('createNameBtn').addEventListener('click', createNameInputs);
    document.getElementById('startGameBtn').addEventListener('click', startGame);
    document.getElementById('nextBtn').addEventListener('click', nextPlayer);
    document.getElementById('submitVoteBtn').addEventListener('click', submitVote);
    document.getElementById('resetGameBtn').addEventListener('click', resetGame);

    const cardInner = document.querySelector("#card-container .card-inner");
    cardInner.addEventListener('mousedown', () => cardInner.classList.add('flipped'));
    cardInner.addEventListener('touchstart', () => cardInner.classList.add('flipped'));
    
    cardInner.addEventListener('mouseup', () => {
        cardInner.classList.remove('flipped');
        document.getElementById("nextBtn").classList.remove('hidden');
    });
    cardInner.addEventListener('touchend', () => {
        cardInner.classList.remove('flipped');
        document.getElementById("nextBtn").classList.remove('hidden');
    });
}

// Ch·∫°y h√†m kh·ªüi t·∫°o khi DOM ƒë√£ ƒë∆∞·ª£c t·∫£i
document.addEventListener('DOMContentLoaded', init);